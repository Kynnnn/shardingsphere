spring.main.allow-bean-definition-overriding=true

#  分片策略
# 配置数据源，给数据源起别名
spring.shardingsphere.datasource.names=m1
# 配置数据源具体内容，包含连接池、驱动、地址、用户名和密码
spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://localhost:3306/user_db?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=root
# 指定user表分布情况，配置表在哪个数据库，表名称是什么
spring.shardingsphere.sharding.tables.user.actual-data-nodes=m1.user_$->{1..2}
# 指定user表中的主键 id  生成策略    SNOWFLAKE 雪花算法
spring.shardingsphere.sharding.tables.user.key-generator.column=id
spring.shardingsphere.sharding.tables.user.key-generator.type=SNOWFLAKE
# 指定分片策略
spring.shardingsphere.sharding.tables.user.table-strategy.inline.sharding-column=age
spring.shardingsphere.sharding.tables.user.table-strategy.inline.algorithm-expression=user_$->{age%2+1}
# 打印sql输出日志
spring.shardingsphere.props.sql.show=true

